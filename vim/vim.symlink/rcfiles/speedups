" *************************************
"
"   Speedups
"
" *************************************

" When editing a file, always jump to the last known cursor position.
" Don't do it for commit messages, when the position is invalid, or when
" inside an event handler (happens when dropping a file on gvim).
autocmd BufReadPost *
    \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

" Quick toggle between two files
nnoremap <leader><leader> <C-^>

" Do not use <Ctrl-c> to break out to normal mode
" Use C-Space to Esc out of any mode
nnoremap <C-Space> <Esc>:noh<CR>
vnoremap <C-Space> <Esc>gV
onoremap <C-Space> <Esc>
cnoremap <C-Space> <C-c>
inoremap <C-Space> <Esc>`^
" Terminal sees <C-@> as <C-space> WTF, but ok
nnoremap <C-@> <Esc>:noh<CR>
vnoremap <C-@> <Esc>gV
onoremap <C-@> <Esc>
cnoremap <C-@> <C-c>
inoremap <C-@> <Esc>`^

" Setup nice command tab completion
set wildmenu
set wildmode=list:longest,full
set wildignore+=*.pyc

" Easy re-sourcing of vimrc
map <leader>sop :source %<cr>

" Easy navigation for editing and coding
nmap <leader>cd :cd ~/projects/
nmap <leader>eh :e ~/
nmap <leader>en :CtrlP ~/Dropbox/Notes<cr>
nmap <leader>ev :e ~/.dotfiles/vim/vimrc.symlink<cr>
nmap <leader>ep :e ~/projects/
nnoremap <leader>er :e <C-r>=escape(expand("%:p:h"), ' ')<cr>/
nnoremap <leader>sav :sav <C-r>=escape(expand("%:p:h"), ' ')<cr>/

" Make Y yank to end of line (like D, or C)
nmap Y y$

" Easy access to the start of the line
nnoremap 0 ^

" Leader-; to enter command mode. No more holding shift!
nnoremap <leader>; :
vnoremap <leader>; :

" Quickly open a second window to view files side by side
nmap <leader>vn :vnew<CR>
nmap <leader>vs :vsplit<CR>

" Move one line at a time, aka 'fine ajdustment'
nnoremap j gj
nnoremap k gk

" Reselect pasted text. Mnem: 'Get pasted'
nnoremap gp `[v`]

" Go to position of last edit. Mnem: 'Go to Edit'
nnoremap ge `.

" vim:ft=vim
